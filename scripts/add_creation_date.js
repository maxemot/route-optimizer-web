require('dotenv').config();
const { kv } = require('@vercel/kv');

async function addCreationDate() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∫ –¥–æ—Å—Ç–∞–≤–∫–∞–º...');

    try {
        const deliveries = await kv.get('deliveries') || [];
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É "29 –∏—é–ª—è 2025 –≥–æ–¥–∞, 02:00:00" –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ (UTC+3)
        // new Date(year, monthIndex, day, hours, minutes, seconds)
        // –í–ê–ñ–ù–û: monthIndex –¥–ª—è –∏—é–ª—è - —ç—Ç–æ 6
        const defaultDate = new Date(Date.UTC(2025, 6, 29, 2, 0, 0) - (3 * 60 * 60 * 1000));
        const defaultDateISO = defaultDate.toISOString();

        console.log(`–ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é: ${defaultDateISO}`);

        const migratedDeliveries = deliveries.map(delivery => {
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ createdAt, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
            if (!delivery.createdAt) {
                return {
                    ...delivery,
                    createdAt: defaultDateISO
                };
            }
            return delivery;
        });

        await kv.set('deliveries', migratedDeliveries);
        console.log(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. ${migratedDeliveries.length} –¥–æ—Å—Ç–∞–≤–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        process.exit(1);
    }
}

addCreationDate(); 