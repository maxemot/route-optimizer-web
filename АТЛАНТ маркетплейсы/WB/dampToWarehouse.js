function copyToWarehouse() {
    const SHEET_ID = "1eVrO8Bkq90YF2muG5bVNttzfO15i5T-2WRWsCYiqLL4";
    const SOURCE_SHEET_NAME = "–î–æ—Å—Ç–∞–≤–∫–∞";
    const TARGET_SHEET_NAME = "–°–∫–ª–∞–¥";
    
    try {
      const ss = SpreadsheetApp.openById(SHEET_ID);
      const sourceSheet = ss.getSheetByName(SOURCE_SHEET_NAME);
      const targetSheet = ss.getSheetByName(TARGET_SHEET_NAME);
      
      if (!sourceSheet || !targetSheet) {
        Logger.log("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω—É–∂–Ω—ã–µ –ª–∏—Å—Ç—ã");
        return;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –ª–∏—Å—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∞
      const updateDate = sourceSheet.getRange("B1").getValue();
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 4-–π —Å—Ç—Ä–æ–∫–∏)
      const sourceData = sourceSheet.getRange(4, 1, sourceSheet.getLastRow() - 3, sourceSheet.getLastColumn()).getValues();
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      const groupedData = {};
      sourceData.forEach(row => {
        if (row[1]) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—Ä—Ç–∏–∫—É–ª –Ω–µ –ø—É—Å—Ç–æ–π
          const article = row[1]; // –ê—Ä—Ç–∏–∫—É–ª WB
          if (!groupedData[article]) {
            groupedData[article] = 1;
          } else {
            groupedData[article]++;
          }
        }
      });
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
      const dataToInsert = Object.entries(groupedData).map(([article, count]) => [
        "–°–ø–∏—Å–∞–Ω–∏–µ",           // 1 —Å—Ç–æ–ª–±–µ—Ü
        "–æ—Ç–≥—Ä—É–∑–∫–∞ –Ω–∞ wb",    // 2 —Å—Ç–æ–ª–±–µ—Ü
        article,             // 3 —Å—Ç–æ–ª–±–µ—Ü - –∞—Ä—Ç–∏–∫—É–ª
        count,              // 4 —Å—Ç–æ–ª–±–µ—Ü - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        updateDate          // 5 —Å—Ç–æ–ª–±–µ—Ü - –¥–∞—Ç–∞
      ]);
      
      // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ –ª–∏—Å—Ç–µ –°–∫–ª–∞–¥, –Ω–∞—á–∏–Ω–∞—è —Å 3-–π —Å—Ç—Ä–æ–∫–∏
      let startRow = 3;
      const targetData = targetSheet.getDataRange().getValues();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É, –Ω–∞—á–∏–Ω–∞—è —Å —Ç—Ä–µ—Ç—å–µ–π
      for (let i = 2; i < targetData.length; i++) { // i = 2 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç 3-–π —Å—Ç—Ä–æ–∫–µ
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 6 —Å—Ç–æ–ª–±—Ü–æ–≤ (A-F)
        const rowIsEmpty = targetData[i].slice(0, 6).every(cell => 
          cell === '' || cell === null || cell === undefined
        );
        
        if (rowIsEmpty) {
          startRow = i + 1; // +1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
          break;
        }
      }
      
      // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
      if (dataToInsert.length > 0) {
        targetSheet.getRange(startRow, 1, dataToInsert.length, 5).setValues(dataToInsert);
        
        Logger.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –ª–∏—Å—Ç "${TARGET_SHEET_NAME}"`);
        Logger.log(`üìä –î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: ${dataToInsert.length}`);
        Logger.log(`üìç –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: ${startRow}`);
      } else {
        Logger.log("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è");
      }
      
    } catch (e) {
      Logger.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${e.toString()}`);
    }
  }